#!/bin/bash

### BEGIN INIT INFO
# Provides:   craftbukkit.jar
# Required-Start: $local_fs $remote_fs
# Required-Stop:  $local_fs $remote_fs
# Should-Start:   $network
# Should-Stop:    $network
# Default-Start:  2 3 4 5
# Default-Stop:   0 1 6
# Short-Description:    craftbukkit.jar server
# Description:    Starts the craftbukkit.jar server
# Tyr, what did i tell you! James can you put back the "core's to run on". I like that tweek it will help us cus
# we can than offer more cores. Tyr stop going and telling people to do things that i said i liked?
# You're both right. Gravy: the cores option is not really directly for the bukkit server, it is for the java garbage collection; but telling the JRE to use parallel (threaded) garbage collection should help (it might normally choose to do this on its' own anyway :P )
# Tyr: I've removed the option telling the GC how many threads to use. After reviewing it, it would be better to tell it the number of cores (no threads like I had previously) BUT it's probably even better to let the JRE decide for itself. 
### END INIT INFO

# This init.d script is based off the one which can be found at 
# http://www.minecraftwiki.net/wiki/Server_startup_script
# but has been modified by NixonInnes to suit the craftbukkit server.

####################################################
# Parameters
####################################################

# Installation directory
INSTALLDIR="installdir_here"

# Number of CPUs system has
#CPU_COUNT="cpucores_here"

# Minimum RAM for craftbukkit to use
MINRAM="minram_here"

# Maximum RAM for craftbukkit to use
MAXRAM="maxram_here"

# System user name for running craftbukkit server
USERNAME="user_here"

# How old (in days) backups will be cleaned from the system
OLDDAYS="olddays_here"

# Backup directory for craftbukkit server
BACKUPDIR="$INSTALLDIR/backup/"

# Date stamp used for craftbukkit backups
DATE= `date "+%Y.%m.%d-%H:%M"`

# URL for updating craftbukkit
BUKKIT_URL="http://ci.craftbukkit.org/job/dev-CraftBukkit/promotion/latest/Recommended/artifact/target/craftbukkit-0.0.1-SNAPSHOT.jar"

# Invocation for starting craftbukkit server
INVOCATION="java -Xms$MINRAM -Xmx$MAXRAM -XX:+UseParallelGC  -jar craftbukkit.jar nogui"

# Used to check who the user is
ME=`whoami`


####################################################
# Functions
####################################################

# Function to run all commands as the specified system user
as_user() {
  if [ $ME == $USERNAME ] ; then
    bash -c "$1"
  else
    su $USERNAME -c "$1"
  fi
}

mc_start() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep craftbukkit.jar > /dev/null
  then
    echo "craftbukkit.jar is already running!"
  else
    echo "Starting craftbukkit.jar..."
    as_user "cd $INSTALLDIR && screen -dmS craftbukkit.jar $INVOCATION"
    sleep 7
    if ps ax | grep -v grep | grep -v -i SCREEN | grep craftbukkit.jar > /dev/null
    then
      echo "craftbukkit.jar is now running."
    else
      echo "Error! Could not start craftbukkit.jar!"
    fi
  fi
}

mc_saveoff() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep craftbukkit.jar > /dev/null
  then
    echo "craftbukkit.jar is running... suspending saves"
    as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"say Starting server backup...\"\015'"
    as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"save-off\"\015'"
    as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"save-all\"\015'"
    sync
    sleep 10
  else
    echo "craftbukkit.jar is not running. Not suspending saves."
  fi
}

mc_saveon() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep craftbukkit.jar > /dev/null
  then
    echo "craftbukkit.jar is running... re-enabling saves"
    as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"save-on\"\015'"
    as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"say End of server backup...\"\015'"
  else
    echo "craftbukkit.jar is not running. Not resuming saves."
  fi
}

mc_stop() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep craftbukkit.jar > /dev/null
  then
    echo "Stopping craftbukkit.jar"
    as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"say Server shutting down imminently...\"\015'"
    as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"say Saving world...\"\015'"
    as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"save-all\"\015'"
    as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"stop\"\015'"
  else
    echo "craftbukkit.jar was not running."
  fi
  if ps ax | grep -v grep | grep -v -i SCREEN | grep craftbukkit.jar > /dev/null
  then
    echo "Error! craftbukkit.jar could not be stopped."
  else
    echo "craftbukkit.jar is stopped."
  fi
}

mc_update() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep craftbukkit.jar > /dev/null
  then
    echo "craftbukkit.jar is running! Will not start update."
  else
    as_user "cd $INSTALLDIR && wget -q -O $INSTALLDIR/craftbukkit.jar.update $BUKKIT_URL"
    if [ -f $INSTALLDIR/craftbukkit.jar.update ]
    then
      if `diff $INSTALLDIR/craftbukkit.jar $INSTALLDIR/craftbukkit.jar.update >/dev/null`
      then
        echo "You are already running the latest version of craftbukkit.jar."
      else
        as_user "mv $INSTALLDIR/craftbukkit.jar.update $INSTALLDIR/craftbukkit.jar"
        echo "craftbukkit.jar successfully updated."
      fi
    else
      echo "craftbukkit.jar update could not be downloaded."
    fi
  fi
}

mc_backup() {
   echo "Backing up craftbukkit.jar server..."
   echo "Checking for backup folder..."
   if [ -d $BACKUPDIR ]
   then
     echo "Found $BACKUPDIR"
   else
     echo "Could not find $BACKUPDIR"
     echo "Creating $BACKUPDIR..."
     as_user "mkdir $BACKUPDIR"
     if [ -d $BACKUPDIR ]
     then
       echo "Successfully created $BACKUPDIR"
     else
       echo "Could not create $BACKUPDIR"
       exit 0
     fi
   fi
   if [ -d $BACKUPDIR/backup_$DATE.tar.gz ]
   then
     for i in 1 2 3 4 5 6
     do
       if [ -d $BACKUPDIR/backup_$DATE-$i.tar.gz ]
       then
         continue
       else
         as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"say Backing up world...\"\015'"
         as_user "tar -zcf $BACKUPDIR/backup_$DATE-$i.tar.gz $INSTALLDIR"
         echo "Backed up world"
         as_user "find $BACKUPDIR/* -mtime +$OLDDAYS -exec rm {} \;"
         break
       fi
     done
   else
     as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"say Backing up world file...\"\015'"
     as_user "tar -zcf $BACKUPDIR/backup_$DATE.tar.gz $INSTALLDIR"
     echo "Backed up world"
     as_user "find $BACKUPDIR/* -mtime +$OLDDAYS -exec rm {} \;"
   fi
   echo "Backup complete"
}

mc_command() {
  if [ "$1" ]
  then
    command="$1";
    if ps ax | grep -v grep | grep -v -i SCREEN | grep craftbukkit.jar > /dev/null
    then
      echo "craftbukkit.jar is running... executing command"
      as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"$command\"\015'"
    fi
    else
      echo "Must specify server command"
  fi
}

#Start-Stop here
case "$1" in
  start)
    mc_start
    ;;
  stop)
    mc_stop
    ;;
  restart)
    mc_stop
    mc_start
    ;;
  update)
    mc_stop
    mc_backup
    mc_update
    mc_start
    ;;
  backup)
    mc_saveoff
    mc_backup
    mc_saveon
    ;;
  status)
    if ps ax | grep -v grep | grep -v -i SCREEN | grep craftbukkit.jar > /dev/null
    then
      echo "craftbukkit.jar is running."
    else
      echo "craftbukkit.jar is not running."
    fi
    ;;
  command)
    mc_command "$2"
    ;;

  *)
  echo "Usage: /etc/init.d/minecraft {start|stop|update|backup|status|restart|command \"server command\"}"
  exit 1
  ;;
esac

exit 0
#!/bin/bash

### BEGIN INIT INFO
# Provides:   craftbukkit.jar
# Required-Start: $local_fs $remote_fs
# Required-Stop:  $local_fs $remote_fs
# Should-Start:   $network
# Should-Stop:    $network
# Default-Start:  2 3 4 5
# Default-Stop:   0 1 6
# Short-Description:    craftbukkit.jar server
# Description:    Starts the craftbukkit.jar server
### END INIT INFO

# This init.d script is based off the one which can be found at 
# http://www.minecraftwiki.net/wiki/Server_startup_script
# but has been modified by NixonInnes to suit the craftbukkit server.

####################################################
# Parameters
####################################################

# Installation directory
INSTALLDIR = "/opt/minecraft"

# Number of CPUs system has
CPU_COUNT = 1

# Minimum RAM for craftbukkit to use
MINRAM = 512M

# Maximum RAM for craftbukkit to use
MAXRAM = 1024M

# System user name for running craftbukkit server
USERNAME = "mcuser"

# How old (in days) backups will be cleaned from the system
OLDDAYS = 7

# Backup directory for craftbukkit server
BACKUPDIR = "$INSTALLDIR/backup/"

# Date stamp used for craftbukkit backups
DATE = `date "+%Y.%m.%d-%H:%M"`

# URL for updating craftbukkit
BUKKIT_URL = http://ci.craftbukkit.org/job/dev-CraftBukkit/promotion/latest/Recommended/artifact/target/craftbukkit-0.0.1-SNAPSHOT.jar

# Invocation for starting craftbukkit server
INVOCATION = "java -Xms$MINRAM -Xmx$MAXRAM -XX:ParallelGCThreads=$CPU_COUNT -jar craftbukkit.jar nogui"

# Used to check who the user is
ME = `whoami`


####################################################
# Functions
####################################################

# Function to run all commands as the specified system user
as_user() {
  if [ $ME == $USERNAME ] ; then
    bash -c "$1"
  else
    su $USERNAME -c "$1"
  fi
}

mc_start() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep craftbukkit.jar > /dev/null
  then
    echo "craftbukkit.jar is already running!"
  else
    echo "Starting craftbukkit.jar..."
    as_user "cd $INSTALLDIR && screen -dmS craftbukkit.jar $INVOCATION"
    sleep 7
    if ps ax | grep -v grep | grep -v -i SCREEN | grep craftbukkit.jar > /dev/null
    then
      echo "craftbukkit.jar is now running."
    else
      echo "Error! Could not start craftbukkit.jar!"
    fi
  fi
}

mc_saveoff() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep craftbukkit.jar > /dev/null
  then
    echo "craftbukkit.jar is running... suspending saves"
    as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"say Starting server backup...\"\015'"
    as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"save-off\"\015'"
    as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"save-all\"\015'"
    sync
    sleep 10
  else
    echo "craftbukkit.jar is not running. Not suspending saves."
  fi
}

mc_saveon() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep craftbukkit.jar > /dev/null
  then
    echo "craftbukkit.jar is running... re-enabling saves"
    as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"save-on\"\015'"
    as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"say End of server backup...\"\015'"
  else
    echo "craftbukkit.jar is not running. Not resuming saves."
  fi
}

mc_stop() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep craftbukkit.jar > /dev/null
  then
    echo "Stopping craftbukkit.jar"
    as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"say Server shutting down imminently...\"\015'"
    as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"say Saving world...\"\015'"
    as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"save-all\"\015'"
    as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"stop\"\015'"
  else
    echo "craftbukkit.jar was not running."
  fi
  if ps ax | grep -v grep | grep -v -i SCREEN | grep craftbukkit.jar > /dev/null
  then
    echo "Error! craftbukkit.jar could not be stopped."
  else
    echo "craftbukkit.jar is stopped."
  fi
}

mc_update() {
  if ps ax | grep -v grep | grep -v -i SCREEN | grep craftbukkit.jar > /dev/null
  then
    echo "craftbukkit.jar is running! Will not start update."
  else
    as_user "cd $INSTALLDIR && wget -q -O $INSTALLDIR/craftbukkit.jar.update $BUKKIT_URL"
    if [ -f $INSTALLDIR/craftbukkit.jar.update ]
    then
      if `diff $INSTALLDIR/craftbukkit.jar $INSTALLDIR/craftbukkit.jar.update >/dev/null`
      then
        echo "You are already running the latest version of craftbukkit.jar."
      else
        as_user "mv $INSTALLDIR/craftbukkit.jar.update $INSTALLDIR/craftbukkit.jar"
        echo "craftbukkit.jar successfully updated."
      fi
    else
      echo "craftbukkit.jar update could not be downloaded."
    fi
  fi
}

mc_backup() {
   echo "Backing up craftbukkit.jar server..."
   echo "Checking for backup folder..."
   if [ -d $BACKUPDIR ]
   then
     echo "Found $BACKUPDIR"
   else
     echo "Could not find $BACKUPDIR"
     echo "Creating $BACKUPDIR..."
     as_user "mkdir $BACKUPDIR"
     if [ -d $BACKUPDIR ]
     then
       echo "Successfully created $BACKUPDIR"
     else
       echo "Could not create $BACKUPDIR"
       exit 0
     fi
   fi
   if [ -d $BACKUPDIR/backup_$DATE.tar.gz ]
   then
     for i in 1 2 3 4 5 6
     do
       if [ -d $BACKUPDIR/backup_$DATE-$i.tar.gz ]
       then
         continue
       else
         as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"say Backing up world...\"\015'"
         as_user "tar -zcf $BACKUPDIR/backup_$DATE-$i.tar.gz $INSTALLDIR"
         echo "Backed up world"
         as_user "find $BACKUPDIR/* -mtime +$OLDDAYS -exec rm {} \;"
         break
       fi
     done
   else
     as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"say Backing up world file...\"\015'"
     as_user "tar -zcf $BACKUPDIR/backup_$DATE.tar.gz $INSTALLDIR"
     echo "Backed up world"
     as_user "find $BACKUPDIR/* -mtime +$OLDDAYS -exec rm {} \;"
   fi
   echo "Backup complete"
}

mc_command() {
  if [ "$1" ]
  then
    command="$1";
    if ps ax | grep -v grep | grep -v -i SCREEN | grep craftbukkit.jar > /dev/null
    then
      echo "craftbukkit.jar is running... executing command"
      as_user "screen -p 0 -S craftbukkit.jar -X eval 'stuff \"$command\"\015'"
    fi
    else
      echo "Must specify server command"
  fi
}

#Start-Stop here
case "$1" in
  start)
    mc_start
    ;;
  stop)
    mc_stop
    ;;
  restart)
    mc_stop
    mc_start
    ;;
  update)
    mc_stop
    mc_backup
    mc_update
    mc_start
    ;;
  backup)
    mc_saveoff
    mc_backup
    mc_saveon
    ;;
  status)
    if ps ax | grep -v grep | grep -v -i SCREEN | grep craftbukkit.jar > /dev/null
    then
      echo "craftbukkit.jar is running."
    else
      echo "craftbukkit.jar is not running."
    fi
    ;;
  command)
    mc_command "$2"
    ;;

  *)
  echo "Usage: /etc/init.d/minecraft {start|stop|update|backup|status|restart|command \"server command\"}"
  exit 1
  ;;
esac

exit 0
